#-------------------------------------------------
# Алгоритм сортировки вставками
#-------------------------------------------------

# Оптимально если в существующий отсортированный массив нужно досортировать новые данные


test_data = [
    [5, 2, 9, 1, 5, 6],        # Набор с повторяющимися числами
    [10, -2, 33, 0, 8, 1],     # Набор с отрицательными числами
    [1, 2, 3, 4, 5, 6],        # Уже отсортированный массив
    [6, 5, 4, 3, 2, 1],        # Обратный порядок
    [42],                      # Одно число
    []                         # Пустой массив
]

#     0  1  2   3  4  5
a = [-3, 5, 0, -8, 1, 10]
N = len(a)  # Число элементов в списке

for i in range(1, N):  # От второго элемента до последнего
    for j in range(i, 0, -1):  # Двигаемся от i до 0
        if a[j] < a[j - 1]:
            a[j], a[j - 1] = a[j - 1], a[j]
        else:
            break

print(a)  # [-8, -3, 0, 1, 5, 10]

# -------------------------------------------------
# Оптимизированный код
# -------------------------------------------------

arr = [-3, 5, 0, -8, 1, 10]  # Пример массива
N = len(arr)  # Число элементов

for i in range(1, N):  # Проход от второго элемента до конца
    current = arr[i]  # Сохраняем текущий элемент
    j = i
    while j > 0 and arr[j - 1] > current:  # Сдвигаем элементы вправо
        arr[j] = arr[j - 1]
        j -= 1
    arr[j] = current  # Вставляем текущий элемент на правильное место

print(arr)  # [-8, -3, 0, 1, 5, 10]
